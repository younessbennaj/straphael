.row {
  max-width: $grid-width;
  margin: 0 auto;

  //Le dernier élément row ne doit pas avoir de margin-bottom 
  &:not(:last-child) { 
    margin-bottom: $gutter-vertical;
  }

  //Evite que la height de la row passe à 0 du fait que ses float childs 
  &::after {
    content: "";
    display: table;
    clear: both;
  }

  //Utilisation d'un selecteur d'attribut avec sass pour le style général des columns
  [class^="col-"] {

    float: left;

    //Le dernier élément row ne doit pas avoir de margin-right 
    &:not(:last-child) {
      margin-right:$gutter-horizontal;
    }

  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-2-offset {
    min-width: calc((100% - #{$gutter-horizontal}) / 2);
    max-height: 1px;
  }

  .col-1-of-3 {
    width: calc((100% - (2 * #{$gutter-horizontal})) / 3);
  }

  .col-2-of-3 {
    width: calc(((100% - (2 * #{$gutter-horizontal})) / 3) * 2 + #{$gutter-horizontal});
  }

  .col-1-of-4 {
    width: calc((100% - (3 * #{$gutter-horizontal})) / 4);
  }

  .col-2-of-4 {
    width: calc(((100% - (3 * #{$gutter-horizontal})) / 4) * 2 + #{$gutter-horizontal});
  }

  .col-3-of-4 {
    width: calc(((100% - (3 * #{$gutter-horizontal})) / 4) * 3 + (#{$gutter-horizontal} * 2));
  }

  .col-1-of-5 {
    width: calc((100% - (4 * #{$gutter-horizontal})) / 5);
  }

  .col-2-of-5 {
    width: calc(((100% - (4 * #{$gutter-horizontal})) / 5) * 2 + #{$gutter-horizontal});
  }

  .col-3-of-5 {
    width: calc(((100% - (4 * #{$gutter-horizontal})) / 5) * 3 + (#{$gutter-horizontal} * 2));
  }

  .col-4-of-5 {
    width: calc(((100% - (4 * #{$gutter-horizontal})) / 5) * 4 + (#{$gutter-horizontal} * 3));
  }

}